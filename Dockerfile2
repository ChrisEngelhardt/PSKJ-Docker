FROM nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04

MAINTAINER chris.engelhardt@me.com

RUN apt-get update && apt-get install -y --no-install-recommends apt-utils
RUN apt-get update && apt-get install -y wget bzip2


#Install MINICONDA3
RUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda.sh && \
	/bin/bash Miniconda.sh -b -p /opt/conda && rm Miniconda.sh

ENV PATH /opt/conda/bin:$PATH


# Install Python3
RUN conda create -y -n jupyter_py3 python=3.6 anaconda && \
	/opt/conda/envs/jupyter_py3/bin/pip install --no-cache-dir tensorflow-gpu==1.12.0 keras==2.1.3 jupyter-tensorboard jupyterlab
RUN conda install -c conda-forge jupyterlab

#Install custom libs
COPY ./py3Libs.txt /py3Libs.txt
RUN /opt/conda/envs/jupyter_py3/bin/pip install --no-cache-dir -r py3Libs.txt


# Install Python2
RUN conda create -y -n jupyter_py2 python=2 anaconda && \
	/opt/conda/envs/jupyter_py2/bin/pip install --no-cache-dir tensorflow-gpu==1.12.0 keras==2.1.3 jupyter-tensorboard jupyterlab
RUN /opt/conda/envs/jupyter_py2/bin/python -m ipykernel install --user

#Install custom libs
COPY ./py2Libs.txt /py2Libs.txt
RUN /opt/conda/envs/jupyter_py2/bin/pip install --no-cache-dir -r py2Libs.txt

RUN apt-get install curl
RUN echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list
RUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
RUN apt-get update
RUN apt-get install pkg-config zip g++ zlib1g-dev unzip bazel -y
RUN mkdir swift-source
RUN cd swift-source
WORKDIR /swift-source


#Building toolchain with LLDB Python3 support
RUN apt-get install git cmake ninja-build clang python uuid-dev libicu-dev icu-devtools libbsd-dev libedit-dev libxml2-dev libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config libblocksruntime-dev libcurl4-openssl-dev systemtap-sdt-dev tzdata rsync libpython3-dev -y

RUN git clone https://github.com/apple/swift.git -b tensorflow
RUN /opt/conda/envs/jupyter_py2/bin/python2.7 /swift-source/swift/utils/update-checkout --clone --scheme tensorflow
#RUN   SWIFT_PACKAGE=tensorflow_linux,no_test && /bin/bash /swift-source/swift/utils/build-toolchain local.swift
#RUN SWIFT_PACKAGE=tensorflow_linux /swift-source/swift/utils/build-toolchain local.swift,gpu,no_test
#RUN utils/build-script --enable-tensorflow --release-debuginfo


#RUN conda create -n swift-tensorflow python==3.6 && \
#/opt/conda/envs/swift-tensorflow/bin/pip install jupyter numpy matplotlib
#RUN wget https://github.com/google/swift-jupyter/archive/master.zip && unzip master.zip && cd master

#RUN /opt/conda/envs/swift-tensorflow/bin/python register.py --sys-prefix --swift-python-use-conda --use-conda-shared-libs \
#  --swift-toolchain <path to extracted swift toolchain directory>

EXPOSE 80
ARG mode=lab
CMD ["/opt/conda/envs/jupyter_py3/bin/jupyter", "lab", "--ip=0.0.0.0", "--no-browser", "--allow-root", "--notebook-dir=/tmp"]
#CMD ["/opt/conda/envs/jupyter_py3/bin/jupyter", "notebook", "--ip=127.0.0.1", "--no-browser", "--allow-root", "--notebook-dir=/tmp"]
